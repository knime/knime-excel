<?xml version="1.0" encoding="utf-8"?>
<knimeNode type="Source" icon="excel_reader.png" xmlns="http://knime.org/node/v4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Excel Reader</name>
	<shortDescription>
		Reads one or more Excel files.
	</shortDescription>
	<fullDescription>
		<intro>
          <p><i>This node supports the 
          </i><a href="https://docs.knime.com/latest/analytics_platform_file_handling_guide/index.html#path"><i>path flow variable.</i></a>
          <i> For further information about file handling in general see the 
          </i><a href="https://docs.knime.com/latest/analytics_platform_file_handling_guide/index.html"><i>File Handling Guide.</i></a><br/></p>
          <p>
		  This node reads Excel files (xlsx, xlsm, and xls format). It can read a single or multiple files at the same 
		  time, however reading only 
		  one sheet per file. The supported Excel types that can be read in are string, number, boolean, date, and time 
		  but not pictures, diagrams, etc. Formulas can also be read in and reevaluated if desired. <br />The data is 
		  read in and converted to the KNIME types string, integer, long, double, boolean, local date, local time,
		  and local date&amp;time. Upon execution, the node will scan the input file to determine number and types of the 
		  columns and output a table with the auto-guessed structure and KNIME types. <br />The performance of this 
		  node is limited (due to the underlying library of the Apache POI project). Reading large files takes a long 
		  time and uses a lot of memory (especially files in xlsx format when formula reevaluation is enabled). <br />
		  <br /> The dialog of this node shows a <i>preview</i> and the <i>file content</i>. While the preview shows the
		  table that will be read in having the settings applied and is updated once a setting is changed, the file
		  content shows the content of the file as it is displayed in Excel. This allows finding row numbers and column
		  names easier to specify different settings.
		  </p>
		</intro>
		<tab name="Settings">
			<option name="Read from">
				Select a file system which stores the data you want to read. There are
				four default file system options to choose from:
				<br />
				<ul>
	                <li><i>Local File System:</i> Allows you to select a file/folder from your
	                    local system.
	                </li>
	                <li><i>Mountpoint:</i> Allows you to read from a mountpoint.
	                	When selected, a new drop-down menu appears to choose the mountpoint.
	                	Unconnected mountpoints are greyed out but can still be selected (note that browsing is disabled in this case).
	                	Go to the KNIME Explorer and connect to the mountpoint to enable browsing.
	                	A mountpoint is displayed in red if it was previously selected but is no longer available.
	                	You won't be able to save the dialog as long as you don't select a valid, i.e. known mountpoint.
	                </li>
	                <li><i>Relative to:</i> Allows you to choose whether to resolve the path
						relative to the current mountpoint, current workflow or the current workflow's data area.
	                When selected a new drop-down menu appears to choose which of the three options to use.
	                </li>
	                <li><i>Custom/KNIME URL:</i> Allows to specify a URL (e.g. file://, http:// or knime:// protocol). 
	                    When selected, a spinner appears that allows you to specify the desired connection and read timeout in milliseconds.
	                    In case it takes longer to connect to the host / read the file, the node fails to execute.
	                    Browsing is disabled for this option.
	                </li>
				</ul>
				To read from other file systems, click on
	            <b>...</b> in the bottom left corner of the node icon followed by
	            <i>Add File System Connection port</i>. Afterwards, connect the desired file system connector
	            node to the newly added input port. The file system connection will then be shown in the drop-down menu.
	            It is greyed out if the file system is not connected in which case you have to (re)execute the connector node first.
				Note: The default file systems listed above can't be selected if a file system is provided via the input port.
			</option>
			<option name="Mode">
				Select whether you want to read a single file or multiple files in a folder.
				When reading files in a folder, you can set filters to specify which
				files and subfolders to include (see below).
			</option>
			<option name="Filter options">
				Only displayed if the mode <i>Files in folder</i> is selected.
				Allows to specify which files should be included according to their file extension and/or name.
				It is also possible to include hidden files.
				The folder filter options enable you to specify which folders should be included based on their name and hidden status.
				Note that the folders themselves will not be included, only the files they contain.
			</option>
			<option name="Include subfolders">
				If this option is checked, the node will include all files from subfolders that satisfy the specified filter options.
				If left unchecked, only the files in the selected folder will be included and all files from subfolders are ignored.
			</option>
			<option name="File, Folder or URL">
				Enter a URL when reading from <i>Custom/KNIME URL</i>, otherwise enter a path to a file or folder. The
				required syntax of a path depends on the chosen file system, such as &quot;C:\path\to\file&quot; (Local
				File System on Windows) or  &quot;/path/to/file&quot; (Local
	            File System on Linux/MacOS and Mountpoint). For file systems connected via input port, the node
	            description of the respective connector node describes the required path format.
				You can also choose a previously selected file/folder from the drop-down list, or select a location
				from the &quot;Browse...&quot; dialog.
				Note that browsing is disabled in some cases:
				<ul>
					<li><i>Custom/KNIME URL:</i> Browsing is always disabled.</li>
					<li><i>Mountpoint:</i> Browsing is disabled if the selected mountpoint isn't connected.
					Go to the KNIME Explorer and connect to the mountpoint to enable browsing.</li>
					<li><i>File systems provided via input port:</i>
					Browsing is disabled if the connector node hasn't been executed since the workflow has been opened.
					(Re)execute the connector node to enable browsing.</li>
				</ul>
                <i>The location can be exposed as or automatically set via a 
                </i><a href="https://docs.knime.com/latest/analytics_platform_file_handling_guide/index.html#path">
                <i>path flow variable.</i></a>
			</option>
			<option name="Sheet selection">
				<ul>
					<li>Select first sheet with data: the first sheet of the selected file(s) that contains data will be 
					read in. Containing data means not being empty. If all sheets of a file are empty, an empty table is 
					read in.</li>
					<li>Select sheet with name: the sheet with the selected name will be read in. If reading multiple 
					files, the sheet names of the first file are shown and the node will fail if any of the other files 
					does not contain a sheet with the selected name.</li>
					<li>Select sheet at index: the sheet at the selected index will be read in. If reading multiple 
					files, the node will fail if any of the files does not contain a sheet at the selected index. 
					The index starts at 0, i.e. the first sheet is at index 0. The maximum index that can be selected
					depends on the number of sheets available in the first read file.</li>
				</ul>
				The order of the sheets is the same as displayed in Excel (i.e. not necessarily a lexicographic order).
			</option>
			<option name="Column header">
				<ul>
					<li>Excel column name e.g. A, B, C: the column names are generated based on the column names in Excel.</li>
					<li>Use column index e.g. Col0, Col1, Col2: the column names are generated by the index of a column with the &quot;Col&quot; prefix.</li>
					<li>
						Table contains column names in row number: If checked, a row can be
						selected that contains the column names. The first row has number 1.
						The file content view can be helpful to find the correct row number
						when filtering empty or hidden rows or
						restricting the area that should be read.
						<br />
						In case multiple files are read, only the column names of the first
						file will be used.
						Rows with the specified number in all other files are not read and will be
						ignored.
						<br />
						If this option is not checked or in case the selected row contains missing values the column names will
						be generated based on the before mentioned options. For the latter a custom prefix
						can be added with the option below.
					</li>
					<li>Empty column name prefix: Sets the column header prefix which is
						used in case the selected row in
						the before mentioned option contains missing values.
						Based on the selection of either the Excel column name or column index option it creates a column
						name with this prefix.
					</li>
				</ul>
				<br />
			</option>
			<option name="Row ID">
				<ul>
					<li>Generate row IDs: row IDs are generated starting with <tt>Row0</tt>, <tt>Row1</tt>, etc.</li>
					<li>Table contains row IDs in column: a column can be selected that contains row IDs. Enter the 
					label (&quot;A&quot;, &quot;B&quot;, etc.) or the number (starting at 1) of the column.
					The rowIDs in the sheet must be unique, otherwise the execution fails.</li>
				</ul>
			</option>
			<option name="Sheet area">
				<ul>
					<li>Read entire data of the sheet: all the data contained in the sheet is read in. This includes 
					areas where diagrams, borders, coloring, etc. are placed and could create empty rows or columns.
					</li>
					<li>Read only data in...: only the data in the specified area is read in. Both start and end 
					columns/rows are inclusive.	For columns, enter their labels (&quot;A&quot;, &quot;B&quot;, etc.) or
					numbers (starting at 1). For rows, enter their numbers (starting at 1). By leaving a field
					empty, the start or end of the area is not restricted.</li>
				</ul>
			</option>
		</tab>
		<tab name="Transformation">
			<option name="Transformations">
				This tab displays every column as a row in a table that allows modifying the structure of the output table.
				It supports reordering, filtering and renaming columns. It is also possible to change the type of the columns.
				Reordering is done via drag-and-drop. Just drag a column to the position it should have in the output table.
				Whether and where to add unknown columns during execution is specified via the special row &lt;any unknown new column&gt;.
				Note that the positions of columns are reset in the dialog if a new file or folder is selected.
			</option>
			<option name="Reset order">Resets the order of columns to the order in the input file/folder.</option>
			<option name="Reset filter">Clicking this button will reset the filters, i.e. all columns will be included.</option>
			<option name="Reset names">Resets the names to the names that are read from file or created if the file/folder doesn't contain column names.</option>
			<option name="Reset types">Resets the output types to the default types guessed from the input file/folder.</option>
			<option name="Reset all">Resets all transformations.</option>
			<option name="Enforce types">
				Controls how columns whose type changes are dealt with. If selected, we attempt to map to the KNIME type you
				configured and fail if that's not possible.
				If unselected, the KNIME type corresponding to the new type is used.
			</option>
			<option name="Take columns from">Only enabled in "Files in folder" mode. Specifies which set of columns are considered for the output table.
				<ul>
					<li>Union: Any column that is part of any input file is considered. If a file is missing a column, it's filled up with missing values.</li>
					<li>Intersection: Only columns that appear in all files are considered for the output table.</li>
				</ul>
				<b>NOTE:</b> This setting has special implications if you are controlling the input location with a flow variable. 
				If Intersection is selected any column that moves into the intersection during execution will be considered to be new, even if it was previously part of the union of columns.
				It is also important to note that the transformation matching during execution is based on name.
				That means if there was a column [A, Integer] during configuration in the dialog and this column becomes [A, String] during execution, then the stored transformation is applied
				to it. For filtering, ordering and renaming, this is straight forward. For type mapping the following is done: If there is an alternative converter to the specified KNIME type, then this converter is used,
				otherwise we default to the default KNIME type for the new type. In our example we might have specified that [A, Integer] should be mapped to Long.
				For the changed column [A, String] there is no converter to Long, so we default back to String and A becomes a String column in the output table.
			</option>
		</tab>
		<tab name="Advanced Settings">
			<option name="Skip hidden columns">
				If checked, hidden columns of the sheet will be skipped and not displayed in the output.
			</option>
			<option name="Skip empty rows">
				If checked, empty rows of the sheet will be skipped and not displayed in the output.
			</option>
			<option name="Skip hidden rows">
				If checked, hidden rows of the sheet will be skipped and not displayed in the output.
			</option>
			<option name="Use Excel 15 digits precision">
				If checked, numbers are read in with 15 digits precision which is the same precision Excel is using
				to display numbers. This will prevent potential floating point issues. For most numbers, no difference
				can be observed if this option is unchecked.
			</option>
			<option name="Replace empty strings with missing values">
				If checked, empty strings (i.e. strings with only whitespaces) are replaced with missing values. This
				option is also applied to formulas that evaluate to strings.				
			</option>
			<option name="Reevaluate formulas">
				If checked, formulas are reevaluated and put into the created table instead of using the cached values. 
				This can cause errors when there are functions that are not	implemented by the underlying Apache POI 
				library.<br/>
				Note: for file formats besides xls, reevaluation requires significantly more memory as the whole file
				needs to be	kept in memory (xls files are anyway loaded completely into memory).
			</option>
			<option name="Formula error handling">
				Specify the handling of formula error cells contained in a sheet or of errors occurring during formula 
				reevaluation.
				<ul>
					<li>Insert an error pattern: the defined pattern is inserted in place of an error cell. This
		            causes the entire column to become a string column in case an error occurs.</li>
					<li>Insert a missing cell: a missing cell is inserted in place of an error cell. A missing value is
					type innocent, but also unobtrusive.</li>
				</ul>
			</option>
			<option name="Table specification">
			  If enabled, only the specified number of input <i>rows</i> are used to analyze the file (i.e to determine
	          the column types). This option is recommended for long files where the first <i>n</i> rows are 
	          representative for the whole file.
			</option>
			<option name="Support changing file schemas">
			  If selected, the reader will compute the table specification on execution.
			  This is useful for two use-cases:
			  <ul>
			  	<li>
			  		Looping over the sheets in an excel file, when the sheets are structured differently.
			  	</li>
			  	<li>
			  		If the content of the configured file/folder changes between executions, 
			  		i.e., columns are added/removed to/from file(s) or their types change.
			  	</li>
			  </ul>
			  NOTE: When checked, the node will not output a table specification during configure and won't apply transformations
			  (therefore the transformation tab is disabled).
			</option>
			<option name="Fail on differing specs">
				If checked, the node will fail if multiple files are read via the Files in folder option and not all 
				files have the same table structure, i.e. the same columns.
			</option>	
		</tab>
	</fullDescription>

	<ports>
		<dynInPort insert-before="0" name="File system connection"
			group-identifier="File System Connection">
			The file system connection.
		</dynInPort>
		<outPort index="0" name="File Table">
		  File being read with number and types of columns guessed automatically.
		</outPort>
	</ports>
</knimeNode>
